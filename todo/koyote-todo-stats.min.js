(function(b){function a(d,c,e){return(d.TodoStats=e.mix({constructor:function(f){d.callMethod("Widget.constructor",this,[null,"todo-stats",f.id]);this.remaining=f.remaining;this.completed=f.completed},"@template":'<span id="todo-count"><strong>{{ remaining }}</strong> {{ items }} left</span><ul id="filters"><li><a class="selected" href="#/">All</a></li><li><a href="#/active">Active</a></li><li><a href="#/completed">Completed</a></li></ul>{{ completed }}<button id="clear-completed" class="{{clear_completed}}">Clear completed ({{ completed }})</button>',"@render":function(){var h="";var g="item";var f="hidden";if(this.remaining>1){g="items"}if(this.completed){f=""}d.callMethod("Widget.render",this,[{id:this.id,remaining:this.remaining,items:g,completed:this.completed,clear_completed:f}])},update:function(g,f){var i=f.querySelector(".todo-label").innerHTML,h=!!f.querySelector(".todo-check").checked;g.text=i;g.checked=h;c.publish("todos","todo:update",{todos:[{id:f.id,text:i,checked:h}]})},"@domEvents":{".todo-check:change":function(h,g){var f=this.parentNode;f.classList.toggle("todo-done");d.TodoItem.update(g,f)},".todo-label:input":function(g,f){d.TodoItem.update(f,this.parentNode)},".todo-label:keypress":function(f){if([13,27].indexOf(f.keyCode)>-1){f.preventDefault();this.blur();return}}}}))}if(typeof define!=="undefined"){define("koyote-todo-item",["koyote","koyote-bus","koyote-widget"],a)}else{a(b,b.Bus,b.Widget)}}(Koyote));